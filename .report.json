{"created": 1752831037.7651098, "duration": 96.87299299240112, "exitcode": 1, "root": "C:\\Users\\kjeon\\OneDrive\\Desktop\\QA\\Bay", "environment": {}, "summary": {"failed": 2, "total": 2, "collected": 2}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_Bay_stock_history.py", "type": "Module"}]}, {"nodeid": "tests/test_Bay_stock_history.py", "outcome": "passed", "result": [{"nodeid": "tests/test_Bay_stock_history.py::test_inflow_past", "type": "Function", "lineno": 47}, {"nodeid": "tests/test_Bay_stock_history.py::test_stock_bulk_edit", "type": "Function", "lineno": 168}]}], "tests": [{"nodeid": "tests/test_Bay_stock_history.py::test_inflow_past", "lineno": 47, "outcome": "failed", "keywords": ["test_inflow_past", "test_Bay_stock_history.py", "tests", "Bay", ""], "setup": {"duration": 0.6689670999767259, "outcome": "passed"}, "call": {"duration": 52.213374899933115, "outcome": "failed", "crash": {"path": "C:\\Users\\kjeon\\OneDrive\\Desktop\\QA\\Bay\\tests\\test_Bay_stock_history.py", "lineno": 137, "message": "AssertionError: [H3] \uc218\ub7c9 \ubd88\uc77c\uce58: 300 != 100\nassert 300 == 100"}, "traceback": [{"path": "tests\\test_Bay_stock_history.py", "lineno": 137, "message": "AssertionError"}], "stdout": "\uc7ac\uace0\ub7c9 : 425, \uc81c\ud488\uba85 : \ub4f1\ub85d\ud14c\uc2a4\ud2b8_0718_11\n[\ud83d\udcc5 \uadf8\uc81c] history2\uc758 \uc0c1\ud0dc \uac12: \uc785\uace0\n[\ud83d\udcc5 \uc5b4\uc81c] history2\uc758 \uc0c1\ud0dc \uac12: \uc785\uace0\n", "longrepr": "page = <Page url='https://stg.bay.centurion.ai.kr/stocks/265?page=1'>\n\n    def test_inflow_past(page):\n        bay_login(page)\n        page.goto(URLS[\"bay_stock\"])\n        page.wait_for_timeout(2000)\n        today = datetime.today()\n        mmdd= today.strftime(\"%m%d\")\n        search_name = f\"\ub4f1\ub85d\ud14c\uc2a4\ud2b8_{mmdd}\"\n    \n        page.locator(\"data-testid=input_search\").fill(search_name)\n        page.wait_for_timeout(1000)\n        page.locator(\"data-testid=btn_search\").click()\n        page.wait_for_timeout(1000)\n    \n        product_column = page.locator(\"table tbody tr\").first.locator(\"td\").nth(3)\n        stock_column = page.locator(\"table tbody tr\").first.locator(\"td\").nth(5)\n        stock_text = stock_column.text_content().strip()\n        product_name = product_column.locator(\"div\").first.text_content().strip()\n        current_stock = int(stock_text)\n        print(f\"\uc7ac\uace0\ub7c9 : {stock_text}, \uc81c\ud488\uba85 : {product_name}\")\n        yesterday_memo = \"\uc5b4\uc81c \ub0a0\uc9dc \uc785\uace0 \ud655\uc778 \ud14c\uc2a4\ud2b8\"\n        day_before_memo = \"\uadf8\uc81c \ub0a0\uc9dc \uc785\uace0 \ud655\uc778 \ud14c\uc2a4\ud2b8\"\n        today_memo = \"30\uc790\uae4c\uc9c0 \uc81c\ud55c\uc778\ub370\uc694. \ucd5c\ub300\uae00\uc790\uc218 \uaf49\uaf49\ucc44\uc6cc\uc11c \ub4f1\ub85d\ud569\ub2c8\ub2e4\"\n        yesterday = datetime.today() - timedelta(days=1)\n        day_before = datetime.today() - timedelta(days=2)\n        today_str = \"\uae08\uc77c \uc7ac\uace0 \ud604\ud669\"\n        yesterday_str = yesterday.strftime(\"%Y. %m. %d\")\n        day_before_str = day_before.strftime(\"%Y. %m. %d\")\n    \n        page.wait_for_timeout(2000)\n        # \ub450 \ub0a0\uc9dc\uc5d0 \ub300\ud574 \uac01\uac01 \ub4f1\ub85d\n        register_stock_for_date(page, day_before, product_name, current_stock, day_before_memo)\n        register_stock_for_date(page, yesterday, product_name, current_stock + 100, yesterday_memo)  # \uc774\uc804 \ub4f1\ub85d \ubc18\uc601\n    \n        # \uc7ac\uace0 \uc0c1\uc138 \uc9c4\uc785\n        page.fill(\"data-testid=input_search\", product_name)\n        page.wait_for_timeout(1000)\n        page.locator(\"data-testid=btn_search\").click()\n        page.wait_for_timeout(1000)\n        first_row_cell = page.locator(\"table tbody tr\").first.locator(\"td\").nth(3)\n        cell_text = first_row_cell.inner_text().strip().split(\"\\n\")[0]\n        assert cell_text == product_name, f\"\u274c \uac80\uc0c9 \uacb0\uacfc\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc74c: {cell_text} != {product_name}\"\n        first_row_cell = page.locator(\"table tbody tr\").first.locator(\"td\").nth(3)\n        first_row_cell.locator(\"div\").first.click()\n        expect(page.locator(\"data-testid=btn_back\")).to_be_visible(timeout=3000)\n        page.wait_for_timeout(500)\n        page.locator(\"data-testid=btn_back\").click()\n        expect(page.locator(\"data-testid=btn_stockadd\")).to_be_visible(timeout=3000)\n        page.wait_for_timeout(500)\n        first_row_cell.locator(\"div\").first.click()\n        expect(page.locator(\"data-testid=txt_today\")).to_have_text(today_str, timeout=3000)\n        page.wait_for_timeout(500)\n    \n        # \ub0a0\uc9dc \ubc0f \uc0c1\ud0dc \ud544\ud130\n        day1_str = select_date_range(page, day_before)\n    \n        # \ubb38\uad6c \ud655\uc778\n        expect(page.locator('[data-testid=\"txt_today\"]')).to_be_visible()\n        expect(page.locator('[data-testid=\"txt_date\"]')).to_have_text(day1_str)\n    \n        # \uac12 \ucd94\ucd9c\n        value_day1 = get_last_column_of_history2(page)\n        print(f\"[\ud83d\udcc5 \uadf8\uc81c] history2\uc758 \uc0c1\ud0dc \uac12: {value_day1}\")\n    \n        # \u2705 \uc5b4\uc81c \ub0a0\uc9dc \uae30\uc900 \ud14c\uc2a4\ud2b8\n        day2_str = select_date_range(page, yesterday)\n    \n        # \ubb38\uad6c \ud655\uc778\n        expect(page.locator('[data-testid=\"txt_today\"]')).to_be_visible()\n        expect(page.locator('[data-testid=\"txt_date\"]')).to_have_text(day2_str)\n    \n        # \uac12 \ucd94\ucd9c\n        value_day2 = get_last_column_of_history2(page)\n        print(f\"[\ud83d\udcc5 \uc5b4\uc81c] history2\uc758 \uc0c1\ud0dc \uac12: {value_day2}\")\n    \n        page.wait_for_timeout(1000)\n        page.locator(\"data-testid=btn_reset\").click()\n        page.wait_for_timeout(1000)\n    \n        # \ud14d\uc2a4\ud2b8 \ubb38\uad6c \ud655\uc778\n        expect(page.locator('[data-testid=\"txt_today\"]')).to_have_text(today_str)\n        txt_dates = page.locator('[data-testid=\"txt_date\"]')\n        expect(txt_dates.nth(0)).to_have_text(yesterday_str)\n        expect(txt_dates.nth(1)).to_have_text(day_before_str)\n    \n        # \u2705 3\ubc88\uc9f8 history\n        hist3_qty = int(get_table_cell_text(page, 3, 0, 2))  # 3\ubc88\uc9f8 \uc5f4 = index 2\n        hist3_memo = get_table_cell_text(page, 3, 0, 4)      # 5\ubc88\uc9f8 \uc5f4 = index 4\n        hist3_last = get_last_column_text(page, 3)\n    \n>       assert hist3_qty == 100, f\"[H3] \uc218\ub7c9 \ubd88\uc77c\uce58: {hist3_qty} != 100\"\nE       AssertionError: [H3] \uc218\ub7c9 \ubd88\uc77c\uce58: 300 != 100\nE       assert 300 == 100\n\ntests\\test_Bay_stock_history.py:137: AssertionError"}, "teardown": {"duration": 0.025823500007390976, "outcome": "passed"}}, {"nodeid": "tests/test_Bay_stock_history.py::test_stock_bulk_edit", "lineno": 168, "outcome": "failed", "keywords": ["test_stock_bulk_edit", "test_Bay_stock_history.py", "tests", "Bay", ""], "setup": {"duration": 0.07496799994260073, "outcome": "passed"}, "call": {"duration": 43.54090309992898, "outcome": "failed", "crash": {"path": "C:\\Users\\kjeon\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py", "lineno": 528, "message": "playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"data-testid=btn_edit_bulk\")\n  -     - locator resolved to <button disabled data-testid=\"btn_edit_bulk\" class=\"inline-flex items-center justify-center whitespace-nowrap transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none shadow-blue disabled:shadow-gray-500 h-[40px] p-2 text-font-16-500 bg-white border-primary-main-blue text-primary-main-blue disabled:border-gray-300 disabled:text-gray-600 disabled:bg-white w-[92px] rounded-md border-0\">\uc77c\uad04\uc644\ub8cc</button>\n  -   - attempting click action\n  -     2 \u00d7 waiting for element to be visible, enabled and stable\n  -       - element is not enabled\n  -     - retrying click action\n  -     - waiting 20ms\n  -     2 \u00d7 waiting for element to be visible, enabled and stable\n  -       - element is not enabled\n  -     - retrying click action\n  -       - waiting 100ms\n  -     56 \u00d7 waiting for element to be visible, enabled and stable\n  -        - element is not enabled\n  -      - retrying click action\n  -        - waiting 500ms"}, "traceback": [{"path": "tests\\test_Bay_stock_history.py", "lineno": 220, "message": ""}, {"path": "..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py", "lineno": 15464, "message": "in click"}, {"path": "..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_locator.py", "lineno": 156, "message": "in click"}, {"path": "..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py", "lineno": 488, "message": "in click"}, {"path": "..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py", "lineno": 61, "message": "in send"}, {"path": "..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py", "lineno": 528, "message": "TimeoutError"}], "stdout": "\uccab\ubc88\uc9f8 \ud56d\ubaa9 \uae30\uc874 \uc785\uace0\ub7c9 : 25, \ub450\ubc88\uc9f8 \ud56d\ubaa9 \uae30\uc874 \uc785\uace0\ub7c9: 25\n", "longrepr": "page = <Page url='https://stg.bay.centurion.ai.kr/stocks?page=1&product_name=%EB%93%B1%EB%A1%9D%ED%85%8C%EC%8A%A4%ED%8A%B8_0718&start_date=2025-07-18&end_date=2025-07-18'>\n\n    def test_stock_bulk_edit(page:Page):\n        bay_login(page)\n        page.goto(URLS[\"bay_stock\"])\n        page.wait_for_timeout(2000)\n        today = datetime.today()\n        mmdd= today.strftime(\"%m%d\")\n        product = f\"\ub4f1\ub85d\ud14c\uc2a4\ud2b8_{mmdd}\"\n        inflow = 25\n        new_inflow = 15\n        txt_bulk = \"2\uac1c\uc758 \uc7ac\uace0 \uc218\uc815\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\"\n        txt_edit = \"1\uac1c\uc758 \uc7ac\uace0 \uc218\uc815\uc774 \uc644\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\"\n    \n        page.locator(\"data-testid=input_search\").fill(product)\n        page.wait_for_timeout(500)\n        page.locator(\"data-testid=btn_search\").click()\n        page.wait_for_timeout(1000)\n    \n        row1 = page.locator(\"table tbody tr\").first\n        row2 = page.locator(\"table tbody tr\").nth(1)\n        checkbox1 = row1.locator(\"td\").first\n        checkbox2 = row2.locator(\"td\").first\n        product_column1 = row1.locator(\"td\").nth(3)\n        product_column2 = row2.locator(\"td\").nth(3)\n        stock_column1 = row1.locator(\"td\").nth(5)\n        stock_column2 = row2.locator(\"td\").nth(5)\n        stock_text1 = stock_column1.text_content().strip()\n        stock_text2 = stock_column2.text_content().strip()\n        product_name1 = product_column1.locator(\"div\").first.text_content().strip()\n        product_name2 = product_column2.locator(\"div\").first.text_content().strip()\n    \n        # \uc7ac\uace0 2\uac1c \uc77c\uad04 \uc218\uc815(2\uac1c \ubaa8\ub450) \ud6c4 \uc0c1\uc138 \ub0b4\uc5ed(2\uac1c \ubaa8\ub450) \ud655\uc778\n        page.locator(\"data-testid=btn_edit_bulk\").click()\n        expect(page.locator(\"data-testid=toast_select_stock\")).to_be_visible(timeout=3000)\n        page.wait_for_timeout(1000)\n        legacy1 = row1.locator(\"td\").nth(6).locator(\"div\")\n        inflow_legacy1 = legacy1.text_content().strip()\n        legacy2 = row2.locator(\"td\").nth(6).locator(\"div\")\n        inflow_legacy2 = legacy2.text_content().strip()\n        checkbox1.click()\n        checkbox2.click()\n        page.locator(\"data-testid=btn_edit_bulk\").click()\n        page.wait_for_timeout(1000)\n        print(f\"\uccab\ubc88\uc9f8 \ud56d\ubaa9 \uae30\uc874 \uc785\uace0\ub7c9 : {inflow_legacy1}, \ub450\ubc88\uc9f8 \ud56d\ubaa9 \uae30\uc874 \uc785\uace0\ub7c9: {inflow_legacy2}\")\n        input_field1 = row1.locator(\"td\").nth(6).locator(\"input\")\n        input_field2 = row2.locator(\"td\").nth(6).locator(\"input\")\n    \n        input_field1.fill(str(inflow))\n        page.wait_for_timeout(500)\n        input_field2.fill(str(inflow))\n        page.wait_for_timeout(500)\n        change1 = datetime.now()\n>       page.locator(\"data-testid=btn_edit_bulk\").click()\n\ntests\\test_Bay_stock_history.py:220: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:15464: in click\n    self._sync(\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_locator.py:156: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001F2E95E8050>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001F2E96B80E0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"data-testid=btn_edit_bulk\")\nE             -     - locator resolved to <button disabled data-testid=\"btn_edit_bulk\" class=\"inline-flex items-center justify-center whitespace-nowrap transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none shadow-blue disabled:shadow-gray-500 h-[40px] p-2 text-font-16-500 bg-white border-primary-main-blue text-primary-main-blue disabled:border-gray-300 disabled:text-gray-600 disabled:bg-white w-[92px] rounded-md border-0\">\uc77c\uad04\uc644\ub8cc</button>\nE             -   - attempting click action\nE             -     2 \u00d7 waiting for element to be visible, enabled and stable\nE             -       - element is not enabled\nE             -     - retrying click action\nE             -     - waiting 20ms\nE             -     2 \u00d7 waiting for element to be visible, enabled and stable\nE             -       - element is not enabled\nE             -     - retrying click action\nE             -       - waiting 100ms\nE             -     56 \u00d7 waiting for element to be visible, enabled and stable\nE             -        - element is not enabled\nE             -      - retrying click action\nE             -        - waiting 500ms\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError"}, "teardown": {"duration": 0.13215059996582568, "outcome": "passed"}}]}