{"created": 1757903448.8044975, "duration": 59.88783645629883, "exitcode": 1, "root": "C:\\Users\\kjeon\\OneDrive\\Desktop\\QA\\Bay", "environment": {}, "summary": {"failed": 1, "passed": 1, "total": 2, "collected": 2}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_Bay_stock_history.py", "type": "Module"}]}, {"nodeid": "tests/test_Bay_stock_history.py", "outcome": "passed", "result": [{"nodeid": "tests/test_Bay_stock_history.py::test_inflow_past", "type": "Function", "lineno": 63}, {"nodeid": "tests/test_Bay_stock_history.py::test_stock_bulk_edit", "type": "Function", "lineno": 186}]}], "tests": [{"nodeid": "tests/test_Bay_stock_history.py::test_inflow_past", "lineno": 63, "outcome": "failed", "keywords": ["test_inflow_past", "test_Bay_stock_history.py", "tests", "Bay", ""], "setup": {"duration": 0.735067900037393, "outcome": "passed"}, "call": {"duration": 22.86458419985138, "outcome": "failed", "crash": {"path": "C:\\Users\\kjeon\\OneDrive\\Desktop\\QA\\Bay\\helpers\\stock_utils.py", "lineno": 52, "message": "AssertionError: Locator expected to have text '3'\nActual value: 0 \nCall log:\n  - LocatorAssertions.to_have_text with timeout 3000ms\n  -   - waiting for locator(\"data-testid=txt_current_stock\")\n  -     7 \u00d7 locator resolved to <div data-testid=\"txt_current_stock\" class=\"relative h-[50px] flex items-center text-font-16-400 rounded-[8px] border border-gray-300 bg-white p-[16px] text-gray-600\">\u2026</div>\n  -       - unexpected value \"0\""}, "traceback": [{"path": "tests\\test_Bay_stock_history.py", "lineno": 95, "message": ""}, {"path": "helpers\\stock_utils.py", "lineno": 52, "message": "AssertionError"}], "stdout": "\uc7ac\uace0\ub7c9 : 3, \uc81c\ud488\uba85 : \ub4f1\ub85d\ud14c\uc2a4\ud2b8_0915_03TestProduct_0915_03\n", "longrepr": "page = <Page url='https://stg.bay.centurion.ai.kr/stocks/add'>\n\n    def test_inflow_past(page):\n        bay_login(page, \"jekwon\")\n        page.goto(URLS[\"bay_stock\"])\n        page.wait_for_selector(\"data-testid=btn_edit\", timeout=10000)\n    \n        search_name = get_manual_product()\n    \n        page.locator(\"data-testid=input_search\").fill(search_name)\n        page.wait_for_timeout(1000)\n        page.locator(\"data-testid=btn_search\").click()\n        page.wait_for_selector(\"data-testid=btn_edit\", timeout=10000)\n    \n    \n        product_column = page.locator(\"table tbody tr\").first.locator(\"td\").nth(3)\n        stock_column = page.locator(\"table tbody tr\").first.locator(\"td\").nth(5)\n        stock_text = stock_column.text_content().strip()\n        raw_product = product_column.locator(\"div\").first.text_content().strip()\n        product_name = raw_product.splitlines()[0].strip()\n        current_stock = int(stock_text)\n        print(f\"\uc7ac\uace0\ub7c9 : {stock_text}, \uc81c\ud488\uba85 : {product_name}\")\n        yesterday_memo = \"\uc5b4\uc81c \ub0a0\uc9dc \uc785\uace0 \ud655\uc778 \ud14c\uc2a4\ud2b8\"\n        day_before_memo = \"\uadf8\uc81c \ub0a0\uc9dc \uc785\uace0 \ud655\uc778 \ud14c\uc2a4\ud2b8\"\n        today_memo = \"30\uc790\uae4c\uc9c0 \uc81c\ud55c\uc778\ub370\uc694. \ucd5c\ub300\uae00\uc790\uc218 \uaf49\uaf49\ucc44\uc6cc\uc11c \ub4f1\ub85d\ud569\ub2c8\ub2e4\"\n        yesterday = datetime.today() - timedelta(days=1)\n        day_before = datetime.today() - timedelta(days=2)\n        today_str = \"\uae08\uc77c \uc7ac\uace0 \ud604\ud669\"\n        yesterday_str = yesterday.strftime(\"%Y. %m. %d\")\n        day_before_str = day_before.strftime(\"%Y. %m. %d\")\n    \n        page.wait_for_timeout(2000)\n        # \ub450 \ub0a0\uc9dc\uc5d0 \ub300\ud574 \uac01\uac01 \ub4f1\ub85d\n>       register_stock_for_date(page, yesterday, search_name, current_stock, yesterday_memo)\n\ntests\\test_Bay_stock_history.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npage = <Page url='https://stg.bay.centurion.ai.kr/stocks/add'>\ndate = datetime.datetime(2025, 9, 14, 11, 29, 59, 213391)\nproduct_name = '\ub4f1\ub85d\ud14c\uc2a4\ud2b8_0915_03', current_stock = 3, past_memo = '\uc5b4\uc81c \ub0a0\uc9dc \uc785\uace0 \ud655\uc778 \ud14c\uc2a4\ud2b8'\n\n    def register_stock_for_date(\n        page: Page,\n        date: datetime,\n        product_name: str,\n        current_stock: int,\n        past_memo: str\n    ):\n        page.click(\"data-testid=btn_stockadd\")\n        page.wait_for_timeout(2000)\n        # \ub0a0\uc9dc \ud3ec\ub9f7\n        mmd = date.strftime(\"%m%d\")  # MMDD \u2192 \ubc84\ud2bc testid\uc6a9\n        ymd = date.strftime(\"%Y. %m. %d\")  # \ud14d\uc2a4\ud2b8 \ube44\uad50\uc6a9\n        txt_register = \"\ud574\ub2f9 \ub0a0\uc9dc\ub85c \uc7ac\uace0 \ub4f1\ub85d\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?\"\n    \n        # \ub0a0\uc9dc \uc120\ud0dd\n        page.locator(\"[data-testid=select_date]\").click()\n        page.wait_for_timeout(1000)\n        page.locator(f\"[data-testid=btn_day_{mmd}]\").click()\n        page.wait_for_timeout(1000)\n    \n        # \uc785\uace0 \uc0c1\ud0dc \uc120\ud0dd\n        page.locator(\"data-testid=drop_status_trigger\").click()\n        page.wait_for_timeout(1000)\n        page.get_by_role(\"option\", name=\"\uc785\uace0\", exact=True).click()\n        page.wait_for_timeout(1000)\n    \n        # \uc81c\ud488\uba85 \uc120\ud0dd\n        page.locator(\"data-testid=drop_prdname_trigger\").click()\n        page.wait_for_timeout(1000)\n        page.fill(\"data-testid=drop_prdname_search\", product_name)\n        page.wait_for_timeout(1000)\n        page.locator(\"data-testid=drop_prdname_item\", has_text=product_name).click()\n    \n        # \ud604\uc7ac \uc7ac\uace0 \ud655\uc778\n        stock=current_stock\n>       expect(page.locator(\"data-testid=txt_current_stock\")).to_have_text(str(stock), timeout=3000)\nE       AssertionError: Locator expected to have text '3'\nE       Actual value: 0 \nE       Call log:\nE         - LocatorAssertions.to_have_text with timeout 3000ms\nE         -   - waiting for locator(\"data-testid=txt_current_stock\")\nE         -     7 \u00d7 locator resolved to <div data-testid=\"txt_current_stock\" class=\"relative h-[50px] flex items-center text-font-16-400 rounded-[8px] border border-gray-300 bg-white p-[16px] text-gray-600\">\u2026</div>\nE         -       - unexpected value \"0\"\n\nhelpers\\stock_utils.py:52: AssertionError"}, "teardown": {"duration": 0.01982680009678006, "outcome": "passed"}}, {"nodeid": "tests/test_Bay_stock_history.py::test_stock_bulk_edit", "lineno": 186, "outcome": "passed", "keywords": ["test_stock_bulk_edit", "test_Bay_stock_history.py", "tests", "Bay", ""], "setup": {"duration": 0.0666145000141114, "outcome": "passed"}, "call": {"duration": 35.6560631999746, "outcome": "passed", "stdout": "\uccab\ubc88\uc9f8 \ud56d\ubaa9 \uae30\uc874 \uc785\uace0\ub7c9 : 0, \ub450\ubc88\uc9f8 \ud56d\ubaa9 \uae30\uc874 \uc785\uace0\ub7c9: 0\n"}, "teardown": {"duration": 0.10086220013909042, "outcome": "passed"}}]}