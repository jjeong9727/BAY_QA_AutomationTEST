import pytest
import random
from playwright.sync_api import Page
from config import URLS, Account
from helpers.common_utils import bay_login

def test_prep_bay (page:Page):
    bay_login(page)

    page.goto(URLS["bay_category"])
    page.wait_for_timeout(1000)

    
    # 구분 등록
    page.click("data-testid=tab_type")
    page.wait_for_timeout(1000)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("의약품")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("Medications")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("의료기기")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("Medical Devices")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("소모품")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("Consumables")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("중복테스트")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("DupOne")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_save")
    page.wait_for_timeout(2000)

    # 종류 등록 
    page.click("data-testid=tab_category")
    page.wait_for_timeout(1000)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("주사제")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("injection")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("연고")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("ointment")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("보톡스")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("botox")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("중복테스트")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("DupOne")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_save")
    page.wait_for_timeout(2000)

    # 제조사 등록 
    page.click("data-testid=tab_maker")
    page.wait_for_timeout(1000)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("메디톡스")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("Medytox")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("루트로닉")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("Lutronic")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("휴메딕스")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("Humedix")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_add")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_kor").last.fill("중복테스트")
    page.wait_for_timeout(500)
    page.locator("data-testid=input_eng").last.fill("DupOne")
    page.wait_for_timeout(500)
    page.click("data-testid=btn_save")
    page.wait_for_timeout(2000)

    # 업체 등록 
    page.goto(URLS["bay_supplier"])
    page.wait_for_timeout(1000)

    page.click("data-testid=btn_orderadd")  # 업체 등록 모달 열기
    page.wait_for_timeout(1000)
    page.fill("data-testid=input_sup_name", "자동화업체")  # 업체명 입력
    page.wait_for_timeout(1000)
    page.fill("data-testid=input_sup_manager", "권정의")  # 담당자 입력
    page.wait_for_timeout(1000)
    page.fill("data-testid=input_sup_contact", "01062754153")  # 연락처 입력
    page.wait_for_timeout(1000)
    page.click("data-testid=btn_confirm")  # 완료 버튼 클릭
    page.wait_for_timeout(500)

    # 제품 등록 (중복테스트)
    page.goto(URLS["bay_products"])
    page.wait_for_timeout(1000)
    page.click("data-testid=btn_prdadd")
    page.wait_for_timeout(1000)

    page.locator("data-testid=drop_type_trigger").click()
    page.wait_for_timeout(1000)
    page.fill("data-testid=drop_type_search", "중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_type_item", has_text="중복테스트").click()
    page.wait_for_timeout(1000)

    page.locator("data-testid=drop_category_trigger").click()
    page.wait_for_timeout(1000)
    page.fill("data-testid=drop_category_search", "중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_category_item", has_text="중복테스트").click()
    page.wait_for_timeout(1000)

    page.fill("data-testid=input_prdname_kor", "중복테스트")
    page.wait_for_timeout(1000)
    page.fill("data-testid=input_prdname_eng", "Duplicate Test")
    page.wait_for_timeout(1000)

    page.locator("data-testid=drop_maker_trigger").click()
    page.wait_for_timeout(1000)
    page.fill("data-testid=drop_maker_search", "중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_maker_item", has_text="중복테스트").click()
    page.wait_for_timeout(1000)

    page.fill("data-testid=input_price", 100)
    page.wait_for_timeout(1000)
    page.fill("data-testid=input_stk_safe", 5)
    page.wait_for_timeout(1000)
    page.fill("data-testid=input_stk_qty", 10)
    page.wait_for_timeout(1000)

    page.locator("data-testid=drop_supplier_trigger").click()
    page.wait_for_timeout(1000)
    page.fill("data-testid=drop_supplier_search", "중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_supplier_item", has_text="중복테스트").click()
    page.wait_for_timeout(1000)

    # "발주 규칙 변경 확인 제품" 등록
    page.locator("data-testid=btn_addrow").click()
    page.wait_for_timeout(1000)

    page.locator("data-testid=drop_type_trigger").last.click()
    page.wait_for_timeout(1000)
    page.fill("data-testid=drop_type_search", "중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_type_item", has_text="중복테스트").click()
    page.wait_for_timeout(1000)

    page.locator("data-testid=drop_category_trigger").last.click()
    page.wait_for_timeout(1000)
    page.fill("data-testid=drop_category_search", "중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_category_item", has_text="중복테스트").click()
    page.wait_for_timeout(1000)

    page.locator("data-testid=input_prdname_kor").last.fill("중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_prdname_eng").last.fill("Duplicate Test")
    page.wait_for_timeout(1000)

    page.locator("data-testid=drop_maker_trigger").last.click()
    page.wait_for_timeout(1000)
    page.fill("data-testid=drop_maker_search", "중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_maker_item", has_text="중복테스트").click()
    page.wait_for_timeout(1000)

    page.locator("data-testid=input_price").last.fill(100)
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_stk_safe").last.fill(5)
    page.wait_for_timeout(1000)
    page.locator("data-testid=input_stk_qty").last.fill(10)
    page.wait_for_timeout(1000)

    page.locator("data-testid=drop_supplier_trigger").last.click()
    page.wait_for_timeout(1000)
    page.fill("data-testid=drop_supplier_search", "중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_supplier_item", has_text="중복테스트").click()
    page.wait_for_timeout(1000)

    page.evaluate("window.scrollTo(0, 0)")
    page.wait_for_timeout(1000)
    page.locator("data-testid=btn_save").click()
    page.wait_for_timeout(1000)

    # 중복테스트 재고 등록(삭제 불가 확인용)
    page.goto(URLS["bay_stockadd"])
    page.wait_for_timeout(2000)
    page.locator("data-testid=drop_status_trigger").click()
    page.wait_for_timeout(1000)
    page.get_by_role("option", name="입고", exact=True).click()

    page.locator("data-testid=drop_prdname_trigger").click()
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_prdname_search").fill("중복테스트")
    page.wait_for_timeout(1000)
    page.locator("data-testid=drop_prdname_item", has_text="중복테스트").click()
    page.wait_for_timeout(1000)
    
    page.fill("data-testid=input_qty", str(3))
    page.wait_for_timeout(1000)
    page.fill("data-testid=input_memo", "테스트 메모")
    page.wait_for_timeout(1000)
    page.locator("data-testid=btn_save").click()
    page.wait_for_timeout(1000)
    page.locator("data-testid=btn_confirm").click()
    page.wait_for_timeout(3000)

# "발주 규칙 변경 제품" 등록 추가 (발주규칙은 "규칙없음") => 규칙 선택 하는 코드 추가 필요
# 발주 규칙명 "중복테스트" 등록 추가